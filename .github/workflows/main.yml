name: Create and publish a Docker image

on:
  workflow_dispatch:
  push:
    branches: [master]
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  schedule:
    - cron: '0 0 * * 6'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.0'
      - run: dotnet publish PlaygroundService -o out
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/playground-service
          tags: |
            type=raw,value={{date 'YYYYMMDD-hhmmss' tz='Asia/Tokyo'}}
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Deploy
        uses: actions/github-script@v6
        env:
          ENVIRONMENT: ${{ github.ref_type == 'tag' && 'production' || 'development' }}
        with:
          github-token: ${{ secrets.WORKFLOW_DISPATCH }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'poc-aaa',
              repo: 'devops',
              workflow_id: 'playground-deploy.yaml',
              ref: 'main',
              inputs: {
                env: '${{ env.ENVIRONMENT }}',
                appName: 'playground-service',
                commit_sha: '${{ steps.meta.outputs.version }}',
              }
            })
